codeigniter Blog
1. Create Database for Admin LOGIN
2. File Setup for Login Page
3. Login Form Validation
4. Admin Dashboard
5.  .htaccess

--------------------------
1. Create Database for Admin LOGIN
--------------------------
i.    Atfirst creating Database called "my_blog_application"
------------
Note:Now we will create some of tabel to do this project
------------
ii.   Creating a tabel called "users" for the admin with coloum 3

iii.  Name - user_id       |  Index - PRIMARY      |  A_I - [OK]
      Name - username      |  Type - VARCHAR       |  Length - 100
      Name - password      |  Type - VARCHAR       |  Length - 100

iv.   For a admin we insert a value like:
      admin	| 123456

v. Now we have to config our database for this visit
   []config -> database.php

---------
'hostname' => 'localhost',
'username' => 'root',
'password' => '',
'database' => 'my_blog_application',
'dbdriver' => 'mysqli',
---------

vi.  Now load the "url" helper in the autoload file
     File location: application\config\autoload.php

     $autoload['helper'] = array('url');


vii. and enter our BASE URL in application->config->config.php
     
     $config['base_url'] = '';
     
     TO
     
     $config['base_url'] = 'http://localhost/codeIgniter-blog/';

viii. Load the Database everywere

     $autoload['libraries'] = array();

          TO

     $autoload['libraries'] = array('database', 'session');

--------------------------
2. File Setup for Login Page

Creating login Page for VIEW
--------------------------
1. Create a folder called "admin" under []view folder
ii. Under []admin folder create a file "login.php" 


--------------------------
Creating Login Page for Controller
--------------------------
i.    Now create login page called "Login.php" for Controller
ii.   Now under controller page called the View login page.
-------
CODE
-------
<?php
	class Login extends CI_controller{
	  /* Default Method */
	  function index(){
	    $this->load->view('admin/login.php');
	  }
	}
?>
------

* Now Setup BOOTSTRAP Login page in our blog project.
  We will create a basic login form under []view -> []admin -> "login.php"
  CODE:
  ---------
  
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Login Page</title>

    <!-- Bootstrap -->
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>
  <body style="background: #f0f0f1;">
    
    <div class="container">
      <div class="row">
        <div class="col-md-4 col-md-offset-4">
          <br><br>
          <h2 class="text-center">Please Sign In</h2>
          <form action="<?php echo base_url().'Login/'; ?>" name="loginForm" id="loginForm" method="post">
            <div class="form-group">
              <input type="text" class="form-control" id="username" name="username" placeholder="Enter User Name">
            </div>
            <div class="form-group">
              <input type="password" class="form-control" id="password" name="password" placeholder="Enter Password">
            </div>
            <button type="submit" class="btn btn-primary btn-block">Submit</button>
          </form>
        </div>
      </div>
    </div>
    <style type="text/css">
      form{
        margin-top: 20px;
        padding: 40px 24px 45px;
        background: #fff;
        border: 1px solid #c3c4c7;
        box-shadow: 0 1px 3px rgb(0 0 0 / 4%);
      }
      .form-control {
        height: 45px;
        padding: 6px 12px;
        border-radius: 0px;
        font-size: 17px;
      }
      .form-group {
        margin-bottom: 10px;
      }
      .btn{
        border-radius: 0;
        font-size: 18px;
        font-weight: 400;
      }
    </style>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
  </body>
</html>

---------

NOTE: (i) In this LOGIN form we use our Database "users" table details like: username, passward in "id" and "name" attribute of the LOGIN form.
      
      (ii) Also from action, method, name, id set here

--------------------------
3. Login Form Validation 
--------------------------
For form validation we need to load our FORM VALIDATION LIBARY in Controller "Login.php" page.
CODE
----------

<?php
	class Login extends CI_controller{
	  /* Default Method */
	  function index(){
	  	/* Calling Form Validation Library */
	  	$this->load->library('form_validation');

	  	/* Setting Login form rules */
	  	$this->form_validation->set_rules('username', 'User Name', 'required');
                $this->form_validation->set_rules('password', 'PassWord', 'required');


                /* If form did not validate then login form shown */
                 if($this->form_validation->run() == false){
  			$this->load->view('admin/login.php');
                  }
                 /* If form validate then Dashboard shown */
                 else{
			  echo "Form Validated Successfully";
			}

	      }
	}
?>

--------------------------
And also we add validation message on Login Form
--------------------------
CODE
-----

<form action="<?php echo base_url().'Login/'; ?>" name="loginForm" id="loginForm" method="post">
<div class="form-group">
  <input type="text" class="form-control" id="username" value="<?php echo set_value('username'); ?>" name="username" placeholder="Enter User Name">
  <p><?php echo form_error('username'); ?></p>
</div>
<div class="form-group">
  <input type="password" class="form-control" id="password" value="<?php echo set_value('password'); ?>" name="password" placeholder="Enter Password">
  <p><?php echo form_error('password'); ?></p>
</div>
<button type="submit" class="btn btn-primary btn-block">Submit</button>
</form>

--------------------------
Connect with database
--------------------------
NOTE: Now We will connect this Login form with our "users" table of our Database so that we can get Proper user login.
      For that create a page called "User_model.php" under []model folder and placed the code:
CODE:
--------

<?php
  class User_model extends CI_model{
    function doLogin($username, $password){
    	$this->db->where('username', $username); // username => are the table "users" field name
    	$this->db->where('password', $password); // password => are the table "users" field name
    	$query = $this->db->get('users');
	// SELECT * FROM users WHERE username = {} AND password = {}
	$user = $query->row_array();
	return $user;
    }
  }
?>

------

And also load this model in our controller page "Login.php" using

/* calling model which contain the login database value */
$this->load->model('User_model');

Also here we update our else{ } code

So the updated code of "Login.php" is:
CODE
----------

<?php
	class Login extends CI_controller{
	  /* Default Method */
	  function index(){

	  	/* calling model which contain the login database value */
	  	$this->load->model('User_model');

	  	/* Calling Form Validation Library */
	  	$this->load->library('form_validation');

	  	/* Setting Login form rules */
	  	$this->form_validation->set_rules('username', 'User Name', 'required');
                $this->form_validation->set_rules('password', 'PassWord', 'required');


      /* If form did not validate then login form shown */
      if($this->form_validation->run() == false){
  			$this->load->view('admin/login.php');
      }
      /* If form validate then Dashboard shown */
      else{
			  
	      	$username = $this->input->post('username');
	      	$password = md5($this->input->post('password'));
	      	$user = $this->User_model->doLogin($username,$password);

	      	if (!empty($user)) {
	      		$this->session->set_userdata('user',$user);
	      		redirect(base_url(). 'adminDashboard');
	      	}
	      	else{
	      		$this->session->set_flashdata('errorMsg','Eigher Username/Password is incorrect.');
	      		redirect(base_url(). 'login');
	      	}

	     }

	}
     }
?>

--------
And with it we also add error message just before the <form> tage
CODE
--------

<!-- Error Messgae if input was worng -->
  <?php $errorMsg = $this->session->userdata('errorMsg'); ?>
  <?php if(!empty($errorMsg)){ ?>
  <div class="alert alert-danger" role="alert">
    <?php echo $errorMsg; ?>
  </div>
  <?php } ?>
  <!-- /Error Messgae if input was worng -->
  
 --------

--------------------------
4. AdminDashboard

i. Finally we create another controller called "AdminDashboard.php" under []controller for Admin Dashboard
--------------------------
CODE:
---------

<?php
	class AdminDashboard extends CI_controller{
	  /* Default Method */
	  function index(){
	  	echo "I am logged in Now";
	  	if (empty($this->session->userdata['user'])) {
	  		redirect(base_url().'login');
	  	}
	  	// print_r($this->session->userdata['user']);
	  	echo "<a href='".base_url().'adminDashboard/signOut'."'>Sign Out</a>";
	  }
	  function signOut(){
	  	$this->session->unset_userdata('user');
	  	redirect(base_url().'login');
	  }
	}
?>

---------

ii. After checking this code, We have to Finally crate Admin Dashboard called "dashboard.php" under []views
    []views -> []admin -> dashboard.php
    
    And call this "dashboard.php" view page in "AdminDashboard.php" COLLECTORS page.
    Updated code of "AdminDashboard.php"
    CODE:
    ----------
    
    <?php
	class AdminDashboard extends CI_controller{
	  /* Default Method */
	  function index(){

	  	// echo "I am logged in Now";
	  	// if (empty($this->session->userdata['user'])) {
	  	// 	redirect(base_url().'login');
	  	// }
	  	// echo "<a href='".base_url().'adminDashboard/signOut'."'>Sign Out</a>";

	  	$this->load->view('admin/dashboard');

	  }
	  function signOut(){
	  	$this->session->unset_userdata('user');
	  	redirect(base_url().'login');
	  }
	}
    ?>
 ---------   
  
  iii. *** Now select any Dashboard Desing as our need and place this code under the page "dashboard.php" ***
  	 
	 (I) To keep our Dashboard related JS and CSS external code, We can create a []folder called "assets"    
	     and keep all external files.
	     
	 (II)  We can call them using:
	 
	       <?php echo base_url() ?>assets/
	       
	       in our "dashboard.php" page.
	       
	       EXAMPLE:
	       Befor:
	       <link href="dashboard.css" rel="stylesheet">
	       
	       After:
	       <link href="<?php echo base_url() ?>assets/css/dashboard.css" rel="stylesheet">
	  
	 
	  (III) After File setup we can edit the Admin Dashboard as our need.
  
       

	  
---------
5.  .htaccess

ADD .htaccess File to remove index.php in the project root file
---------
CODE:
---------
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /codeIgniter-blog
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php?/$1 [L]
</IfModule>
---------
Note: * After upload the project localhost to the surver then just remove the "codeIgniter-blog" and it becomes
      	RewriteBase /
	
	
--------------------------

